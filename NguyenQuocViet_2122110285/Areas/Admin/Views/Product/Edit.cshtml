@model NguyenQuocViet_2122110285.Context.Product

@{
    ViewBag.Title = "Chỉnh sửa sản phẩm";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0">Chỉnh sửa sản phẩm</h1>
            </div>
        </div>
    </div>
</div>

@using (Html.BeginForm("Edit", "Product", FormMethod.Post, new { enctype = "multipart/form-data", id = "editProductForm" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ProductID)
    
    <div class="card">
        <div class="card-body">
            <div class="row">
                <div class="col-md-8">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        <label>Tên sản phẩm <span class="text-danger">*</span></label>
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <label>Giá <span class="text-danger">*</span></label>
                        @Html.TextBoxFor(model => model.Price, "{0:0.##}", new { @class = "form-control", type = "number", min = "0" })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <label>Giá khuyến mãi</label>
                        @Html.TextBoxFor(model => model.DiscountPrice, "{0:0.##}", new { @class = "form-control", type = "number", min = "0" })
                        @Html.ValidationMessageFor(model => model.DiscountPrice, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <label>Số lượng <span class="text-danger">*</span></label>
                        @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", type = "number", min = "0" } })
                        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <label>Thương hiệu <span class="text-danger">*</span></label>
                        @Html.DropDownList("BrandID", null, "-- Chọn thương hiệu --", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.BrandID, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <label>Danh mục <span class="text-danger">*</span></label>
                        @Html.DropDownList("CategoryID", null, "-- Chọn danh mục --", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <label>Mô tả</label>
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = "5" })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <label>Thông số kỹ thuật</label>
                        @Html.TextAreaFor(model => model.Specification, new { @class = "form-control", rows = "5" })
                        @Html.ValidationMessageFor(model => model.Specification, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        <label>Thêm ảnh mới</label>
                        <input type="file" name="imageFiles" id="imageFiles" multiple class="form-control-file" accept="image/*" />
                        <small class="form-text text-muted">Có thể chọn nhiều ảnh cùng lúc</small>
                    </div>

                    <div class="form-group">
                        <label>Ảnh hiện tại</label>
                        <div id="currentImages" class="row">
                            @if (Model.ProductImages != null && Model.ProductImages.Any())
                            {
                                foreach (var image in Model.ProductImages)
                                {
                                    <div class="col-6 mb-3" id="image-@image.ImageID">
                                        <div class="card">
                                            <img src="~/Content/images/items/@image.ImageURL" class="card-img-top" alt="@Model.Name">
                                            <div class="card-body p-2">
                                                <div class="btn-group btn-group-sm w-100">
                                                    @if (!image.IsMainImage==true)
                                                    {
                                                        <button type="button" class="btn btn-outline-primary" onclick="setMainImage(@image.ImageID)">
                                                            <i class="fas fa-star"></i>
                                                        </button>
                                                    }
                                                    else
                                                    {
                                                        <button type="button" class="btn btn-primary" disabled>
                                                            <i class="fas fa-star"></i>
                                                        </button>
                                                    }
                                                    <button type="button" class="btn btn-outline-danger" onclick="deleteImage(@image.ImageID)">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                    </div>

                    <div id="imagePreview" class="row mt-3">
                        <!-- Preview ảnh mới sẽ được hiển thị ở đây -->
                    </div>
                </div>
            </div>

            <div class="form-group mt-4">
                <button type="submit" class="btn btn-primary">Lưu thay đổi</button>
                @Html.ActionLink("Trở về", "Index", null, new { @class = "btn btn-secondary" })
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function() {
            // Xử lý preview ảnh mới
            $("#imageFiles").change(function() {
                var preview = $("#imagePreview");
                preview.empty();
                
                if (this.files && this.files.length > 0) {
                    $.each(this.files, function(index, file) {
                        var col = $("<div>").addClass("col-6 mb-2");
                        var card = $("<div>").addClass("card");
                        var img = $("<img>").addClass("card-img-top").css({
                            "max-height": "150px",
                            "object-fit": "cover"
                        });
                        
                        var reader = new FileReader();
                        reader.onload = function(e) {
                            img.attr("src", e.target.result);
                        }
                        reader.readAsDataURL(file);
                        
                        card.append(img);
                        col.append(card);
                        preview.append(col);
                    });
                }
            });

            // Validation form
            $("#editProductForm").validate({
                rules: {
                    Name: "required",
                    Price: {
                        required: true,
                        min: 0
                    },
                    Quantity: {
                        required: true,
                        min: 0
                    },
                    BrandID: "required",
                    CategoryID: "required"
                },
                messages: {
                    Name: "Vui lòng nhập tên sản phẩm",
                    Price: {
                        required: "Vui lòng nhập giá sản phẩm",
                        min: "Giá sản phẩm phải lớn hơn hoặc bằng 0"
                    },
                    Quantity: {
                        required: "Vui lòng nhập số lượng",
                        min: "Số lượng phải lớn hơn hoặc bằng 0"
                    },
                    BrandID: "Vui lòng chọn thương hiệu",
                    CategoryID: "Vui lòng chọn danh mục"
                },
                errorElement: "span",
                errorClass: "text-danger",
                highlight: function(element, errorClass) {
                    $(element).addClass("is-invalid");
                },
                unhighlight: function(element, errorClass) {
                    $(element).removeClass("is-invalid");
                }
            });
        });

        // Xóa ảnh
        function deleteImage(imageId) {
            if (confirm('Bạn có chắc chắn muốn xóa ảnh này?')) {
                $.ajax({
                    url: '@Url.Action("DeleteImage", "Product")',
                    type: 'POST',
                    data: { id: imageId },
                    success: function(response) {
                        if (response.success) {
                            $('#image-' + imageId).fadeOut(300, function() { $(this).remove(); });
                        } else {
                            alert(response.message || 'Có lỗi xảy ra khi xóa ảnh');
                        }
                    },
                    error: function() {
                        alert('Có lỗi xảy ra khi xóa ảnh');
                    }
                });
            }
        }

        // Đặt ảnh chính
        function setMainImage(imageId) {
            $.ajax({
                url: '@Url.Action("SetMainImage", "Product")',
                type: 'POST',
                data: { id: imageId },
                success: function(response) {
                    if (response.success) {
                        location.reload(); // Tải lại trang để cập nhật giao diện
                    } else {
                        alert(response.message || 'Có lỗi xảy ra khi đặt ảnh chính');
                    }
                },
                error: function() {
                    alert('Có lỗi xảy ra khi đặt ảnh chính');
                }
            });
        }
    </script>
}
